services:
  demo_db:
    user: 1000:1000
    image: postgres:13-alpine
    container_name: demo_db
    restart: always
    networks:
      - demo_network
    environment:
      - POSTGRES_USER=${POSTGRES__USER}
      - POSTGRES_PASSWORD=${POSTGRES__PASSWORD}
      - POSTGRES_HOST=${POSTGRES__HOST}
      - POSTGRES_DB=${POSTGRES__DB}
      - POSTGRES_HOST_AUTH_METHOD=trust
    healthcheck:
      test: [ "CMD-SHELL", "sh -c 'pg_isready -U demo -d demo'" ]
      interval: 10s
      timeout: 10s
      retries: 5
    volumes:
      - ./docker/data/db/data:/var/lib/postgresql/data
      - ./docker/data/db/backup:/backup
      - ./etc/init-user.sql:/docker-entrypoint-initdb.d/init-user.sql
    ports:
      - "7432:5432"

  bet_maker_app:
    build:
      context: .
      dockerfile: docker/BetMaker.dockerfile
    image: bet_maker_app
    container_name: bet_maker_app
    env_file: .env
    restart: always
    volumes:
      - ./bet_maker:/app/src
    networks:
      - demo_network
    depends_on:
      - demo_db
    ports:
      - "8081:80"

networks:
  demo_network:
    external: true
    name: demo_network